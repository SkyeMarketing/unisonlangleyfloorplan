{
  "version": 3,
  "sources": ["../server.js", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/thank-you.tsx", "../app/routes/$plan/index.tsx", "../app/schemas/Plans.schema.ts", "../app/schemas/Plan.schema.ts", "../app/schemas/Area.schema.ts", "../app/schemas/Baths.schema.ts", "../app/schemas/Category.schema.ts", "../app/schemas/Enabled.schema.ts", "../app/schemas/Layout.schema.ts", "../app/schemas/Name.schema.ts", "../app/schemas/Units.schema.ts", "../app/schemas/Unit.schema.ts", "../app/data/Plans.server.ts", "../app/components/PlanUnit.tsx", "../app/routes/index.tsx", "../app/components/CategoryCarousel.tsx", "../app/components/CategoryPlan.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/netlify\";\nimport * as build from \"@remix-run/dev/server-build\";\n\n/*\n * Returns a context object with at most 3 keys:\n *  - `netlifyGraphToken`: raw authentication token to use with Netlify Graph\n *  - `clientNetlifyGraphAccessToken`: For use with JWTs generated by\n *    `netlify-graph-auth`.\n *  - `netlifyGraphSignature`: a signature for subscription events. Will be\n *    present if a secret is set.\n */\nfunction getLoadContext(event, context) {\n  let rawAuthorizationString;\n  let netlifyGraphToken;\n\n  if (event.authlifyToken != null) {\n    netlifyGraphToken = event.authlifyToken;\n  }\n\n  let authHeader = event.headers[\"authorization\"];\n  let graphSignatureHeader = event.headers[\"x-netlify-graph-signature\"];\n\n  if (authHeader != null && /Bearer /gi.test(authHeader)) {\n    rawAuthorizationString = authHeader.split(\" \")[1];\n  }\n\n  let loadContext = {\n    clientNetlifyGraphAccessToken: rawAuthorizationString,\n    netlifyGraphToken: netlifyGraphToken,\n    netlifyGraphSignature: graphSignatureHeader,\n  };\n\n  // Remove keys with undefined values\n  Object.keys(loadContext).forEach((key) => {\n    if (loadContext[key] == null) {\n      delete loadContext[key];\n    }\n  });\n\n  return loadContext;\n}\n\nexport const handler = createRequestHandler({\n  build,\n  getLoadContext,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/home/radmin/nwd/unisonlangleyfloorplan/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/thank-you.tsx\";\nimport * as route2 from \"./routes/$plan/index.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/thank-you\": {\n      id: \"routes/thank-you\",\n      parentId: \"root\",\n      path: \"thank-you\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$plan\": {\n      id: \"routes/$plan\",\n      parentId: \"root\",\n      path: \":plan\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: \"index\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  MetaFunction } from\n\"@remix-run/react\";\nimport type {\n  RouteComponent } from\n\"@remix-run/react/dist/routeModules\";\nimport type {\n  LinksFunction,\n  LoaderFunction } from\n\"@remix-run/server-runtime\";\n\nimport { json } from \"@remix-run/node\";\nimport { Links, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData, useLocation } from \"@remix-run/react\";\n\nimport React, { useEffect } from \"react\";\n\nimport styles from \"~/tailwind.css\";\n\nexport const links = ((() => [\n{ rel: \"stylesheet\", href: styles },\n{\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\"\n},\n{\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\",\n  crossOrigin: \"anonymous\"\n},\n{\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Cinzel:wght@400;500;600;700;800;900&family=Frank+Ruhl+Libre:wght@300;400;500;700;900&display=swap\"\n}]) satisfies\nLinksFunction);\n\nexport const meta = ((() => [{\n  charset: \"utf-8\",\n  title: \"Unison Floorplans\",\n  viewport: \"width=device-width,initial-scale=1\"\n}]) satisfies MetaFunction);\n\ntype LoaderData = {\n  gaTrackingId?: string;\n};\n\ntype ENV = NodeJS.ProcessEnv & {\n  GA_TRACKING_ID: string;\n};\n\nexport const loader: LoaderFunction = async () => {\n  return json<LoaderData>({ gaTrackingId: 'AW-323317353' });\n};\n\nexport default (function App() {\n  const location = useLocation();\n  const { gaTrackingId } = useLoaderData<LoaderData>();\n\n  return (\n\n    <html>\n    <head>\n      <Links />\n      <Meta />\n      {\n        process.env.NODE_ENV === \"development\" && !gaTrackingId ?\n        null :\n\n        <>\n              <script\n            async\n            defer\n            src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`} />\n\n              <script\n            async\n            defer\n            id=\"gtag-init\"\n            dangerouslySetInnerHTML={{\n              __html: `\n                window.datalayer = window.datalayer || []\n                function gtag() {\n                  datalayer.push(arguments);\n                }\n                gtag('js', new Date())\n                gtag('config', '${gaTrackingId}', {\n                  page_path: '${location.pathname}'\n                }\n                )\n              `\n            }} />\n\n\n              {\n          location.pathname !== '/thank-you' ?\n          null :\n\n          <script\n            async\n            defer\n            dangerouslySetInnerHTML={{\n              __html: `\n                          gtag('event', 'conversion', {'send_to': 'AW-323317353/M8AKCI_JwuICEOnclZoB'});\n                        `\n            }} />}\n\n\n            </>}\n\n\n    </head>\n    <body\n        className={`overflow-hidden relative h-screen`}>\n\n      <Outlet />\n      <ScrollRestoration />\n      <Scripts />\n    </body>\n    </html>);\n\n} satisfies RouteComponent);", "import type {\n  RouteComponent } from\n\"@remix-run/react/dist/routeModules\";\nimport type {\n  LinksFunction } from\n\"@remix-run/server-runtime\";\n\nimport React from \"react\";\n\nimport styles from '~/styles/thank-you.css';\n\nexport const links = ((() => [\n{\n  rel: 'stylesheet',\n  href: styles\n}]) satisfies\nLinksFunction);\n\nexport default (function ThankYou() {\n  return (\n    <main\n      className={`\n          flex \n          flex \n          items-center sm:items-end md:items-center lg:items-end\n          justify-center\n          py-16 \n          bg-center \n          w-full \n          mx-auto \n          h-full \n          bg-img \n          bg-cover \n          bg-fixed \n          bg-no-repeat \n          bg-blend-darken \n          bg-blend-darken \n        `}>\n\n        <p\n        className={`\n            text-xl \n            font-serif \n            uppercase \n            font-bold \n            py-4 \n            px-8 \n            bg-white \n            border-2 \n            border-aqua \n            rounded-md \n            text-center\n          `}>\n          Thank you for registering!\n        </p>\n      </main>);\n\n} satisfies RouteComponent);", "import type { \n  RouteComponent,\n} from \"@remix-run/react/dist/routeModules\"\nimport type {\n  LoaderFunction,\n} from \"@remix-run/server-runtime\"\n\nimport PLANS from \"~/data/Plans.server\";\nimport {redirect} from \"@remix-run/node\";\nimport {z} from \"zod\";\nimport AreaSchema, {areaTransformer} from \"~/schemas/Area.schema\";\nimport BathsSchema, {bathsTransformer} from \"~/schemas/Baths.schema\";\nimport NameSchema, {nameTransformer} from \"~/schemas/Name.schema\";\nimport UnitsSchema from \"~/schemas/Units.schema\";\nimport LayoutSchema, {layoutTransformer} from \"~/schemas/Layout.schema\";\nimport {Link, useLoaderData} from \"@remix-run/react\";\nimport PlanUnit from \"~/components/PlanUnit\";\n\nconst LoaderDataSchema = z.object({\n  area: AreaSchema,\n  baths: BathsSchema,\n  layout: LayoutSchema,\n  name: NameSchema,\n  units: UnitsSchema,\n})\ntype LoaderData = z.infer<typeof LoaderDataSchema>;\n\nexport const loader = (({params}) => {\n  const {plan} = params;\n\n  console.log(params)\n\n  if (!plan) {\n    redirect(`/`)\n  }\n\n  const findPlan = PLANS\n    .filter(({enabled}) => enabled)\n    .map(({area, baths, layout, name, units}) => {\n      return {area, baths, layout, name, units};\n    })\n    .find(p => p.name === plan)\n\n  if (!findPlan) {\n    return redirect(\"/\")\n  }\n\n  return LoaderDataSchema.parse(findPlan);\n\n}) satisfies LoaderFunction\n\nexport default (function Index() {\n  const data: LoaderData = useLoaderData();\n\n  return (\n    <main\n      className={`\n        container\n        flex\n        flex-col\n        mx-auto\n        lg:space-y-8\n        overflow-hidden\n      `}\n    >\n      <img\n        className={`\n          lg:w-3/4\n          mx-auto\n          justify-self-center\n        `}\n        alt={`${data.name} floorplan`}\n        src={`/imgs/plans/${data.name}.webp`}\n      />\n\n      <div\n        className={`\n          flex\n          flex-col\n          justify-center\n          items-center\n          gap-4\n        `}\n      >\n        <div\n          className={`\n            border-2\n            border-aqua\n            rounded-lg\n            px-4\n            py-2\n            mb-2\n          `}\n        >\n          <div\n            className={`\n              flex\n              flex-col\n              font-serif\n              gap-x-1\n              text-sm\n              py-4\n              px-2\n              w-64\n              text-center\n            `}\n          >\n            <h1\n              className={`\n                uppercase\n                text-3xl\n                font-bold\n                text-aqua\n              `}\n            >\n              {nameTransformer(data.name)}\n            </h1>\n            <Link\n              to={`/m`}\n              className={`\n                decoration-1\n                underline\n                hover:text-aqua \n                hover:underline \n                hover:decoration-2 \n                hover:decocation-aqua \n                transition-all \n                duration-300 \n                ease-in-out\n              `}\n            >\n              Change floorplan\n            </Link>\n          </div\n          >\n          <ul\n            className={`\n              flex\n              flex-col\n              items-center\n              text-xl\n              uppercase\n              font-serif\n            `}\n          >\n            <li>{layoutTransformer(data.layout)}</li>\n            <li>{bathsTransformer(data.baths)}</li>\n            <li>{areaTransformer(data.area)}</li>\n          </ul>\n        </div>\n\n        <ul\n          className={`\n            flex\n            lg:w-1/2\n            flex-wrap\n            flex-row\n            gap-4\n            overflow-x-auto\n            py-2\n            justify-center\n            items-center\n            mx-auto\n          `}\n        >\n          {data.units.map((unit) => (\n            <li key={unit}>\n              <Link to={`/${data.name}/${unit}`}><PlanUnit unit={unit}/> </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </main>\n  )\n}) satisfies RouteComponent\n", "import {z} from \"zod\";\nimport PlanSchema from \"~/schemas/Plan.schema\";\n\nconst PlansSchema = z.array(PlanSchema);\nexport default PlansSchema;\nexport type Plans = z.infer<typeof PlansSchema>;", "import {z} from \"zod\";\nimport AreaSchema from \"~/schemas/Area.schema\";\nimport BathsSchema from \"~/schemas/Baths.schema\";\nimport CategorySchema from \"~/schemas/Category.schema\";\nimport EnabledSchema from \"~/schemas/Enabled.schema\";\nimport LayoutSchema from \"~/schemas/Layout.schema\";\nimport NameSchema from \"~/schemas/Name.schema\";\nimport UnitsSchema from \"~/schemas/Units.schema\";\n\nconst PlanSchema = z.object({\n  area: AreaSchema,\n  baths: BathsSchema,\n  category: CategorySchema,\n  enabled: EnabledSchema,\n  layout: LayoutSchema,\n  name: NameSchema,\n  units: UnitsSchema,\n});\nexport default PlanSchema;\nexport type Plan = z.infer<typeof PlanSchema>;", "import {z} from \"zod\";\n\nconst AreaSchema = z\n  .enum([\n    \"464\",\n    \"582\",\n    \"633\",\n    \"646\",\n    \"716\",\n    \"797\",\n    \"827\",\n    \"859\",\n    \"863\",\n    \"880\",\n    \"1042\",\n    \"1043\",\n  ], {\n    description: \"The area of the plan\",\n    invalid_type_error: \"The area must be a string\",\n    required_error: \"Area is required\",\n  })\nexport default AreaSchema;\n\nexport type Area = z.infer<typeof AreaSchema>\n\nexport const areaTransformer = (area: Area) => `${area} Sq.Ft.`", "import {z} from \"zod\";\n\nconst BathsSchema = z\n  .number({\n    description: \"The number of bathrooms in the plan\",\n    invalid_type_error: \"The number of bathrooms must be a number\",\n    required_error: \"The number of bathrooms is required\",\n  })\n  .min(1, {\n    message: \"The number of bathrooms must be at least 1\",\n  })\n  .max(3, {\n    message: \"The number of bathrooms must be at most 3\",\n  })\nexport default BathsSchema;\nexport type Baths = z.infer<typeof BathsSchema>;\n\nexport const bathsTransformer = (baths: Baths) => `${baths} Bath${baths > 1 ? \"s\" : \"\"}`", "import {z} from \"zod\";\n\nconst CategorySchema = z\n  .enum([\n      \"A\",\n      \"B\",\n      \"C\",\n    ], {\n      description: \"The category of the plan\",\n      invalid_type_error: \"The category must be a string\",\n      required_error: \"Category is required\",\n    }\n  );\nexport default CategorySchema;\nexport type Category = z.infer<typeof CategorySchema>;", "import {z} from \"zod\";\n\nconst EnabledSchema = z\n  .boolean({\n    description: \"Whether the plan is enabled\",\n    invalid_type_error: \"The enabled flag must be a boolean\",\n  })\n  .optional()\n  .default(true);\nexport default EnabledSchema;\nexport type Enabled = z.infer<typeof EnabledSchema>;", "import {z} from \"zod\";\n\nconst LayoutSchema = z.enum([\n  \"studio\",\n  \"one-bedroom\",\n  \"one-bedroom-plus-den\",\n  \"two-bedroom\",\n  \"two-bedroom-plus-den\",\n  \"jr-two-bedroom\",\n  \"three-bedroom\",\n], {\n  description: \"The layout of the plan\",\n  invalid_type_error: \"The layout must be a string\",\n  required_error: \"The layout is required\",\n})\nexport default LayoutSchema;\nexport type Layout = z.infer<typeof LayoutSchema>;\n\nexport const layoutTransformer = (layout: Layout) => {\n  switch (layout) {\n    case \"studio\":\n      return \"Studio\";\n    case \"one-bedroom\":\n      return \"1 Bedroom\";\n    case \"one-bedroom-plus-den\":\n      return \"1 Bedroom + Den\";\n    case \"two-bedroom\":\n      return \"2 Bedroom\";\n    case \"two-bedroom-plus-den\":\n      return \"2 Bedroom + Den\";\n    case \"jr-two-bedroom\":\n      return \"Jr. 2 Bedroom\";\n    case \"three-bedroom\":\n      return \"3 Bedroom\";\n  }\n}", "import {z} from \"zod\";\n\nconst NameSchema = z\n  .string({\n    description: \"The name of the plan\",\n    invalid_type_error: \"The name must be a string\",\n    required_error: \"The name is required\",\n  })\nexport default NameSchema;\nexport type Name = z.infer<typeof NameSchema>;\n\nexport const nameTransformer = (name: Name) => `Plan ${name}`", "import {z} from \"zod\";\nimport UnitSchema from \"~/schemas/Unit.schema\";\n\nconst UnitsSchema = z.array(UnitSchema, {\n  description: \"Available units for the plan\",\n  invalid_type_error: \"The units must be an array of numbers\",\n  required_error: \"The units are required\",\n});\nexport default UnitsSchema;\nexport type Units = z.infer<typeof UnitsSchema>;", "import {z} from \"zod\";\n\nconst UnitSchema = z.number();\nexport default UnitSchema;\nexport type Unit = z.infer<typeof UnitSchema>;", "import type {Plans} from \"~/schemas/Plans.schema\";\nimport PlansSchema from \"~/schemas/Plans.schema\";\n\nconst PLANS: Plans = PlansSchema\n  .parse([\n    {\n      area: \"464\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"studio\",\n      name: \"A\",\n      units: [\n        103,\n        104,\n        105,\n        203,\n        204,\n        205,\n        303,\n        304,\n        305,\n        403,\n        404,\n        405,\n        503,\n        504,\n        505,\n      ],\n    },\n    {\n      area: \"797\",\n      baths: 2,\n      category: \"A\",\n      enabled: true,\n      layout: \"jr-two-bedroom\",\n      name: \"A1\",\n      units: [\n        101,\n        201,\n        301,\n        401,\n        501,\n        601,\n      ],\n    },\n    {\n      area: \"646\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"one-bedroom\",\n      name: \"A2\",\n      units: [\n        102,\n        202,\n        215,\n        302,\n        315,\n        402,\n        415,\n        502,\n        515,\n        602,\n        606,\n      ]\n    },\n    {\n      area: \"582\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"one-bedroom-plus-den\",\n      name: \"A3\",\n      units: [\n        106,\n        107,\n        206,\n        207,\n        306,\n        307,\n        406,\n        407,\n        506,\n        507,\n      ],\n    },\n    {\n      area: \"646\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"one-bedroom\",\n      name: \"A4\",\n      units: [\n        108,\n      ],\n    },\n    {\n      area: \"633\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"jr-two-bedroom\",\n      name: \"A5\",\n      units: [\n        110,\n        111,\n        112,\n        113,\n        210,\n        211,\n        212,\n        213,\n        310,\n        311,\n        312,\n        313,\n        410,\n        411,\n        412,\n        413,\n        510,\n        511,\n        512,\n        513,\n        604,\n      ],\n    },\n    {\n      area: \"646\",\n      baths: 1,\n      category: \"A\",\n      enabled: true,\n      layout: \"one-bedroom-plus-den\",\n      name: \"A6\",\n      units: [\n        603,\n      ],\n    },\n    {\n      area: \"859\",\n      baths: 2,\n      category: \"B\",\n      enabled: true,\n      layout: \"two-bedroom\",\n      name: \"B\",\n      units: [\n        214,\n        314,\n        414,\n        514,\n        605,\n      ],\n    },\n    {\n      area: \"863\",\n      baths: 2,\n      category: \"B\",\n      enabled: true,\n      layout: \"two-bedroom-plus-den\",\n      name: \"B1\",\n      units: [\n        216,\n        316,\n        416,\n        516,\n        616,\n      ]\n    },\n    {\n      area: \"716\",\n      baths: 1,\n      category: \"B\",\n      enabled: true,\n      layout: \"two-bedroom\",\n      name: \"B2\",\n      units: [\n        217,\n      ],\n    },\n    {\n      area: \"827\",\n      baths: 2,\n      category: \"B\",\n      enabled: true,\n      layout: \"two-bedroom\",\n      name: \"B3\",\n      units: [\n        317,\n        417,\n        517,\n        617,\n      ],\n    },\n    {\n      area: \"880\",\n      baths: 2,\n      category: \"C\",\n      enabled: true,\n      layout: \"two-bedroom\",\n      name: \"C\",\n      units: [\n        109,\n        209,\n        309,\n        409,\n      ],\n    },\n    {\n      area: \"1042\",\n      baths: 2,\n      category: \"C\",\n      enabled: true,\n      layout: \"three-bedroom\",\n      name: \"C1\",\n      units: [\n        208,\n      ],\n    },\n    {\n      area: \"1043\",\n      baths: 2,\n      category: \"C\",\n      enabled: true,\n      layout: \"three-bedroom\",\n      name: \"C2\",\n      units: [\n        308,\n        408,\n      ],\n    }\n  ]);\nexport default PLANS;", "import {z} from \"zod\";\n\nconst PlanUnitSchema = z.object({\n  unit: z.number()\n})\nexport default ({unit}: z.infer<typeof PlanUnitSchema>) => {\n  return (\n    <span\n      className={`\n        block\n        py-4 md:py-6\n        hover:bg-aqua\n        border-2\n        border-aqua hover:border-grey\n        rounded-lg\n        w-32 md:w-56\n        font-serif\n        text-2xl\n        text-center\n        group\n      `}\n    >\n      <p\n        className={`\n          text-black group-hover:text-white\n        `}\n      >\n        {unit}\n      </p>\n    </span>\n  )\n}", "import type { \n  RouteComponent,\n} from \"@remix-run/react/dist/routeModules\"\nimport type {\n  LoaderFunction,\n} from \"@remix-run/server-runtime\"\n\nimport CategorySchema from \"~/schemas/Category.schema\";\nimport {z} from \"zod\";\nimport {useLoaderData} from \"@remix-run/react\";\nimport CategoryCarousel from \"~/components/CategoryCarousel\";\nimport AreaSchema from \"~/schemas/Area.schema\";\nimport LayoutSchema from \"~/schemas/Layout.schema\";\nimport NameSchema from \"~/schemas/Name.schema\";\nimport PLANS from \"~/data/Plans.server\";\n\nconst LoaderDataSchema = z\n  .record(CategorySchema, z\n    .array(z.object({\n      area: AreaSchema,\n      layout: LayoutSchema,\n      name: NameSchema,\n    }))\n  );\ntype LoaderData = z.infer<typeof LoaderDataSchema>;\n\nexport const loader = (() => {\n  const data: LoaderData = {};\n\n  PLANS\n    .filter(({enabled}) => enabled)\n    .map(({baths, enabled, units, ...plan}) => plan)\n    .forEach(({category, ...plan}) => {\n      if (data[category]) {\n        data[category]?.push(plan);\n      } else {\n        data[category] = [plan];\n      }\n    });\n  return data;\n}) satisfies LoaderFunction\n\nexport default (function Index() {\n  const data: LoaderData = useLoaderData();\n  return (\n    <main\n      className={`\n        container\n        px-3\n        py-6\n        mx-auto\n        bg-white\n      `}\n    >\n      <section\n        className={`\n          flex\n          flex-col\n          gap-y-2\n        `}\n      >\n        {\n          Object.entries(data).map(([category, plans]) => (\n            <div\n              className={`\n                py-4 sm:py-6\n              `}\n              key={category}\n            >\n              <h1\n                className={`\n                  mx-auto\n                  uppercase\n                  font-serif\n                  text-4xl md:text-7xl\n                  font-bold\n                  text-center\n                  text-aqua\n                  py-4 md:py-8\n                `}\n              >\n                {category}\n              </h1>\n\n              <CategoryCarousel plans={plans} />\n            </div>\n          ))\n        }\n      </section>\n    </main>\n  )\n}) satisfies RouteComponent\n", "import {z} from \"zod\";\nimport NameSchema from \"~/schemas/Name.schema\";\nimport AreaSchema from \"~/schemas/Area.schema\";\nimport LayoutSchema from \"~/schemas/Layout.schema\";\nimport {Fragment, useCallback, useEffect, useRef, useState} from \"react\";\nimport CategoryPlan from \"~/components/CategoryPlan\";\n\nconst CategoryCarouselSchema = z\n  .object({\n    plans: z\n      .array(z\n        .object({\n          area: AreaSchema,\n          layout: LayoutSchema,\n          name: NameSchema,\n        })\n      )\n  })\n\nexport default ({plans}: z.infer<typeof CategoryCarouselSchema>) => {\n  const MAX_PLANS = plans.length;\n  const FIRST_PLAN = 0;\n  const LAST_PLAN = MAX_PLANS - 1;\n\n  const [current, setCurrent] = useState(0);\n\n  const leftButtonRef = useRef<HTMLButtonElement>(null);\n  const rightButtonRef = useRef<HTMLButtonElement>(null);\n  const rightLgButtonRef = useRef<HTMLButtonElement>(null);\n\n  const leftClickListener = useCallback((e: MouseEvent) => {\n    e.preventDefault();\n\n    if (current > 0) {\n      setCurrent(current - 1);\n    }\n  }, [current])\n\n  const rightClickListener = useCallback((e: MouseEvent) => {\n    e.preventDefault();\n\n    if (current < LAST_PLAN) {\n      setCurrent(current + 1);\n    }\n  }, [current, plans.length])\n\n  const rightLgClickListener = useCallback(\n    (e: MouseEvent) => {\n      e.preventDefault();\n\n\n      if (current < plans.length - 1) {\n        setCurrent(current + 1);\n      } else {\n        setCurrent(LAST_PLAN);\n      }\n    },\n    [LAST_PLAN, current, plans.length]\n  )\n\n  useEffect(\n    () => {\n\n      if (leftButtonRef.current) {\n        const left = leftButtonRef.current;\n        left.addEventListener('click', leftClickListener);\n      }\n\n      if (rightButtonRef.current) {\n        const right = rightButtonRef.current;\n        right.addEventListener('click', rightClickListener);\n      }\n\n      if (rightLgButtonRef.current) {\n        const rightLg = rightLgButtonRef.current;\n        rightLg.addEventListener('click', rightLgClickListener);\n      }\n    },\n    [current]\n  )\n\n  const smComponentSchema = z\n    .object({\n      plan: z\n        .object({\n          area: AreaSchema,\n          layout: LayoutSchema,\n          name: NameSchema,\n        })\n    })\n  const SmComponent = ({plan}: z.infer<typeof smComponentSchema>) => (<CategoryPlan {...plan} />);\n\n  const lgComponentSchema = z\n    .object({\n      plans: z\n        .array(z\n          .object({\n            area: AreaSchema,\n            layout: LayoutSchema,\n            name: NameSchema,\n          })\n        )\n    })\n\n  const LgComponent = ({plans}: z.infer<typeof lgComponentSchema>) => (\n    <div\n      className={`\n        flex\n        justify-center\n        items-center\n        gap-2\n      `}\n    >\n      {plans.map((plan, index) => {\n        if (index >= current && index <= current + 2) {\n          return <CategoryPlan key={index} {...plan} />\n        } else {\n          return <Fragment key={index} />\n        }\n      })}\n    </div>\n  );\n\n\n  return (\n    <div\n      className={`\n        flex\n        justify-center\n        items-center\n        gap-2\n      `}\n    >\n      <button\n        className={`\n          rounded-full \n          hover:bg-aqua \n          h-12 \n          w-12 \n          flex \n          justify-center \n          items-center\n          group\n          transition-all\n          ease-in-out\n          duration-300\n        `}\n        disabled={current === FIRST_PLAN}\n        ref={leftButtonRef}\n        type={\"button\"}\n      >\n        <svg\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          className={`\n            w-8\n            h-8\n            group-hover:text-white\n            transition-all\n            ease-in-out\n            duration-300\n          `}\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M7.72 12.53a.75.75 0 010-1.06l7.5-7.5a.75.75 0 111.06 1.06L9.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n      {/* Default */}\n      <span\n        className={`\n          lg:hidden\n          flex\n          gap-2\n          justify-center\n          items-center\n        `}\n      >\n        <SmComponent plan={plans[current]} />\n      </span>\n      {/* lg */}\n      <span\n        className={`\n          hidden lg:flex\n          gap-2\n          justify-center\n          items-center\n        `}\n      >\n        <LgComponent plans={plans} />\n      </span>\n\n      <button\n        className={`\n          lg:hidden\n          rounded-full \n          hover:bg-aqua \n          h-12 \n          w-12 \n          flex \n          justify-center \n          items-center\n          group\n          transition-all\n          ease-in-out\n          duration-300\n        `}\n        disabled={current === LAST_PLAN}\n        ref={rightButtonRef}\n        type={'button'}\n      >\n        <svg\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          className={`\n            w-8\n            h-8\n            group-hover:text-white\n            transition-all\n            ease-in-out\n            duration-300\n          `}\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M16.28 11.47a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 011.06-1.06l7.5 7.5z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n\n      <button\n        className={`\n          hidden\n          rounded-full \n          hover:bg-aqua \n          h-12 \n          w-12 \n          hidden lg:flex \n          justify-center \n          items-center\n          group\n          transition-all\n          ease-in-out\n          duration-300\n        `}\n        disabled={current + 2 >= LAST_PLAN}\n        ref={rightLgButtonRef}\n        type={'button'}\n      >\n        <svg\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          className={`\n            w-8\n            h-8\n            group-hover:text-white\n            transition-all\n            ease-in-out\n            duration-300\n          `}\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M16.28 11.47a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 011.06-1.06l7.5 7.5z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n    </div>\n  )\n}", "import {z} from \"zod\";\nimport AreaSchema, {areaTransformer} from \"~/schemas/Area.schema\";\nimport NameSchema from \"~/schemas/Name.schema\";\nimport LayoutSchema, {layoutTransformer} from \"~/schemas/Layout.schema\";\nimport {Link} from \"@remix-run/react\";\n\nconst CategoryPlanSchema = z.object({\n  area: AreaSchema,\n  layout: LayoutSchema,\n  name: NameSchema,\n})\nexport default ({area, layout, name}: z.infer<typeof CategoryPlanSchema>) => {\n  return (\n    <Link\n      to={`/${name}`}\n    >\n      <div\n        className={`\n          flex\n          flex-col sm:flex-row lg:flex-col\n          justify-center sm:justify-start\n          sm:items-center\n          w-64 sm:w-auto\n          border-2\n          border-black hover:border-grey\n          rounded-lg\n          overflow-hidden\n          hover:bg-aqua\n          group\n        `}\n      >\n        <img\n          alt={`${name} Floorplan`}\n          className={`\n            border-b-2 sm:border-b-0 sm:border-r-2 lg:border-b-2 lg:border-r-0\n            border-aqua group-hover:border-grey\n          `}\n          src={`/imgs/plans/${name}.min.webp`} />\n        <div\n          className={`\n            place-center\n            text-center\n            transition-all\n            ease-in-out\n            duration-300\n            sm:w-44 lg:w-48\n            py-2 sm:py-auto\n            sm:px-4\n          `}\n        >\n          <h2\n            className={`\n              uppercase\n              text-2xl\n              font-bold\n              font-serifCaps\n              text-black group-hover:text-white\n              group-hover:underline\n              group-hover:decoration-white\n              group-hover:decoration-4\n            `}\n          >\n            Plan {name}\n          </h2>\n          <ul\n            className={`\n              mt-4\n              text-lg\n              font-bold\n              font-serif\n              uppercase\n              text-black group-hover:text-white\n            `}\n          >\n            <li>{layoutTransformer(layout)}</li>\n            <li>{areaTransformer(area)}</li>\n          </ul>\n        </div>\n      </div>\n    </Link>\n  )\n}", "export default {'entry':{'module':'/build/entry.client-FMCYAN2W.js','imports':['/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-GAWRJWIF.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-KXG2A6WS.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-BZGAQZOQ.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/$plan':{'id':'routes/$plan','parentId':'root','path':':plan','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$plan-LBNBMP4P.js','imports':['/build/_shared/chunk-JPS4SMAW.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':'index','index':undefined,'caseSensitive':undefined,'module':'/build/routes/index-OHKGOCTZ.js','imports':['/build/_shared/chunk-JPS4SMAW.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/thank-you':{'id':'routes/thank-you','parentId':'root','path':'thank-you','index':undefined,'caseSensitive':undefined,'module':'/build/routes/thank-you-HOROP5M6.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false}},'version':'45f5a1ee','hmr':{'runtime':'/build/_shared/chunk-KXG2A6WS.js','timestamp':1695325488639},'url':'/build/manifest-45F5A1EE.js'};"],
  "mappings": "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",
  "names": ["jsxDEV", "thank_you_default", "links", "jsxDEV", "links", "thank_you_default", "loader", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "z", "useLoaderData", "z", "jsxDEV", "jsxDEV", "z", "loader", "useLoaderData", "loader", "z", "useLoaderData", "z", "Fragment", "z", "Link", "jsxDEV", "z", "jsxDEV", "z", "plans", "Fragment", "jsxDEV", "LoaderDataSchema", "z", "loader", "useLoaderData"]
}
